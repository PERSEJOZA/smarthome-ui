{"version":3,"sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/components/login/login.component.ts","./src/app/authentication/components/login/login.component.html","./src/app/authentication/models/user.ts","./src/app/authentication/services/authentication.service.ts","./src/app/services/configuration.service.ts"],"names":[],"mappings":"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","file":"authentication-authentication-module-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {LoginComponent} from './components/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {AuthenticationRoutingModule} from './authentication-routing.module';\r\nimport {LoginComponent} from './components/login/login.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [AuthenticationRoutingModule, SharedModule],\r\n  exports: [LoginComponent],\r\n})\r\nexport class AuthenticationModule {}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\nimport {UserInfoService} from 'src/app/services/user-info.service';\r\n\r\nimport {AuthenticationService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [AuthenticationService]\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  loginFrom: FormGroup;\r\n  loginSubscription: Subscription;\r\n  registerSubscription: Subscription;\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router,\r\n    private userInfoService: UserInfoService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    localStorage.clear();\r\n    this.userInfoService.clear();\r\n    this.loginFrom = new FormGroup({\r\n      username: new FormControl('admin', Validators.required),\r\n      currentPassword: new FormControl('0000', Validators.required)\r\n    });\r\n  }\r\n\r\n  public login(): void {\r\n    this.loginSubscription = this.authenticationService\r\n      .login(this.loginFrom.value.username, this.loginFrom.value.currentPassword)\r\n      .subscribe((response: any) => {\r\n        delete localStorage.token;\r\n        localStorage.token = response.token;\r\n        delete localStorage.name;\r\n        localStorage.username = this.loginFrom.value.username;\r\n        this.userInfoService.setUserInfo();\r\n        this.router.navigate(['/food-planner']);\r\n      });\r\n  }\r\n\r\n  public register(): void {\r\n    this.registerSubscription = this.authenticationService\r\n      .register(this.loginFrom.value.username, this.loginFrom.value.currentPassword)\r\n      .subscribe((response: any) => {\r\n        delete localStorage.token;\r\n        localStorage.token = response.token;\r\n        delete localStorage.name;\r\n        localStorage.username = this.loginFrom.value.username;\r\n        this.userInfoService.setUserInfo();\r\n        this.router.navigate(['/food-planner']);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.loginSubscription) {\r\n      this.loginSubscription.unsubscribe();\r\n    }\r\n    if (this.registerSubscription) {\r\n      this.registerSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"login-form\">\r\n    <form id=\"loginForm\" [formGroup]=\"loginFrom\" (ngSubmit)=\"login()\">\r\n      <label for=\"username\">\r\n        Username:\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"username\"\r\n        id=\"username\"\r\n        autocomplete=\"username\"\r\n      />\r\n      <label for=\"password\">\r\n        Password:\r\n      </label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        formControlName=\"currentPassword\"\r\n        autocomplete=\"current-password\"\r\n      />\r\n    </form>\r\n    <div>\r\n      <button type=\"submit\" form=\"loginForm\" [disabled]=\"!loginFrom.valid\">\r\n        Sign in\r\n      </button>\r\n      <button (click)=\"register()\" [disabled]=\"!loginFrom.valid\">\r\n        Register\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export class User {\r\n  public constructor(public username: string, public password: string) {}\r\n}\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {ConfigurationService} from 'src/app/services/configuration.service';\r\n\r\nimport {User} from '../models/user';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  constructor(private http: HttpClient, private configuration: ConfigurationService) {}\r\n\r\n  public login(username: string, password: string): Observable<string> {\r\n    return this.http.post<string>(`${this.configuration.nestJSServerUrl}/login`, new User(username, password));\r\n  }\r\n\r\n  public register(username: string, password: string): Observable<string> {\r\n    return this.http.post<string>(`${this.configuration.nestJSServerUrl}/register`, new User(username, password));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n  public nestJSServerUrl = environment.nestJSServerUrl;\n}\n"],"sourceRoot":"webpack:///"}