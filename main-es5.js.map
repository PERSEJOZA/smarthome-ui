{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing/app-routing.module.ts","webpack:///src/app/app-routing/guards/authentication.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/error-message/error-message.component.ts","webpack:///src/app/components/error-message/error-message.component.html","webpack:///src/app/services/error-message.service.ts","webpack:///src/app/services/interceptors/http-request-error-handler.interceptor.ts","webpack:///src/app/services/interceptors/loader-spinner.interceptor.ts","webpack:///src/app/services/spinner.service.ts","webpack:///src/app/services/user-info.service.ts","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/image-cropper/image-cropper.component.ts","webpack:///src/app/shared/components/image-cropper/image-cropper.component.html","webpack:///src/app/shared/components/spinner/spinner.component.ts","webpack:///src/app/shared/components/spinner/spinner.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","mod","AuthenticationModule","FoodPlannerModule","canActivate","WarehouseModule","redirectTo","AppRoutingModule","forRoot","imports","providers","AuthenticationGuard","router","next","state","localStorage","token","navigate","queryParams","url","console","log","AppComponent","spinnerService","errorMessageService","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","bootstrap","DashboardComponent","ErrorMessageComponent","ErrorMessageService","error","undefined","providedIn","HttpRequestErrorHandlerInterceptor","errorMessage","request","handle","pipe","setError","message","event","ok","clearError","JSON","stringify","LoaderSpinnerInterceptor","numberOfRequests","startLoading","stopLoading","SpinnerService","isLoading","UserInfoService","username","HeaderComponent","userInfoService","isShowUserDetails","setUserInfo","ImageCropperComponent","errorService","imageChangedEvent","croppedImage","base64","form","patchValue","image","SpinnerComponent","SharedModule","environment","production","nestJSServerUrl","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {DashboardComponent} from '../components/dashboard/dashboard.component';\r\nimport {AuthenticationGuard} from './guards/authentication.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('../authentication/authentication.module').then(mod => mod.AuthenticationModule)\r\n  },\r\n  {\r\n    path: 'food-planner',\r\n    loadChildren: () => import('../food-planner/food-planner.module').then(mod => mod.FoodPlannerModule),\r\n    canActivate: [AuthenticationGuard]\r\n  },\r\n  {\r\n    path: 'warehouse',\r\n    loadChildren: () => import('../warehouse/warehouse.module').then(mod => mod.WarehouseModule)\r\n    // canActivate: [AuthenticationGuard]\r\n  },\r\n  {path: '**', redirectTo: ''}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthenticationGuard]\r\n})\r\nexport class AppRoutingModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (localStorage.token) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login'], {\r\n        queryParams: {\r\n          return: state.url\r\n        }\r\n      });\r\n      console.log(next);\r\n\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\nimport {ErrorMessageService} from './services/error-message.service';\r\nimport {SpinnerService} from './services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor(public spinnerService: SpinnerService, public errorMessageService: ErrorMessageService) {}\r\n}\r\n","<router-outlet></router-outlet>\r\n<app-spinner class=\"spinner\" *ngIf=\"spinnerService.isLoading\"></app-spinner>\r\n<app-error-message class=\"error\" *ngIf=\"errorMessageService.error\"></app-error-message>\r\n","import {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\nimport {AppRoutingModule} from './app-routing/app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\r\nimport {ErrorMessageComponent} from './components/error-message/error-message.component';\r\nimport {HttpRequestErrorHandlerInterceptor} from './services/interceptors/http-request-error-handler.interceptor';\r\nimport {LoaderSpinnerInterceptor} from './services/interceptors/loader-spinner.interceptor';\r\nimport {SharedModule} from './shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, DashboardComponent, ErrorMessageComponent],\r\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule, SharedModule],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpRequestErrorHandlerInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: LoaderSpinnerInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<app-header>main dashboard</app-header>\r\n<p>\r\n  <a [routerLink]=\"['/food-planner']\">Food Planner</a>\r\n</p>\r\n<p>\r\n  <a [routerLink]=\"['/warehouse']\">warehouse</a>\r\n</p>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {ErrorMessageService} from '../../services/error-message.service';\r\n\r\n@Component({\r\n  selector: 'app-error-message',\r\n  templateUrl: './error-message.component.html',\r\n  styleUrls: ['./error-message.component.scss']\r\n})\r\nexport class ErrorMessageComponent implements OnInit {\r\n  constructor(public errorMessageService: ErrorMessageService) {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<p class=\"error\">{{ errorMessageService.error }}</p>\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorMessageService {\r\n  error: string;\r\n\r\n  constructor() {}\r\n\r\n  public clearError(): void {\r\n    this.error = undefined;\r\n  }\r\n\r\n  public setError(error: any): void {\r\n    this.error = error;\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\n\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\nimport {ErrorMessageService} from '../error-message.service';\r\n\r\n@Injectable()\r\nexport class HttpRequestErrorHandlerInterceptor implements HttpInterceptor {\r\n  public constructor(private errorMessage: ErrorMessageService) {}\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error: ErrorEvent) => {\r\n        this.errorMessage.setError(error.message);\r\n        throw error.error;\r\n      }),\r\n      tap(event => {\r\n        if (event instanceof HttpResponse && !!event.ok) {\r\n          this.errorMessage.clearError();\r\n        } else {\r\n          this.errorMessage.setError(JSON.stringify(event));\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {finalize} from 'rxjs/operators';\r\n\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\nimport {SpinnerService} from '../spinner.service';\r\n\r\n@Injectable()\r\nexport class LoaderSpinnerInterceptor implements HttpInterceptor {\r\n  private numberOfRequests = 0;\r\n\r\n  public constructor(private spinnerService: SpinnerService) {}\r\n  public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.numberOfRequests++;\r\n    this.spinnerService.startLoading();\r\n\r\n    return next.handle(req).pipe(\r\n      finalize(() => {\r\n        this.numberOfRequests--;\r\n        if (this.numberOfRequests === 0) {\r\n          this.spinnerService.stopLoading();\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n  isLoading = false;\r\n\r\n  constructor() {}\r\n\r\n  public startLoading(): void {\r\n    this.isLoading = true;\r\n  }\r\n\r\n  public stopLoading(): void {\r\n    this.isLoading = false;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserInfoService {\r\n  username: string;\r\n\r\n  constructor() {}\r\n\r\n  clear(): void {\r\n    this.username = undefined;\r\n  }\r\n\r\n  setUserInfo(): void {\r\n    this.username = localStorage.username;\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {UserInfoService} from 'src/app/services/user-info.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  public isShowUserDetails = false;\r\n\r\n  constructor(private router: Router, public userInfoService: UserInfoService) {}\r\n\r\n  public logout(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userInfoService.setUserInfo();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"container__content\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <span\r\n    class=\"user-info__photo\"\r\n    (click)=\"isShowUserDetails = !isShowUserDetails\"\r\n    >&#9731;</span\r\n  >\r\n  <div\r\n    *ngIf=\"isShowUserDetails && userInfoService.username\"\r\n    class=\"user-info__details\"\r\n  >\r\n    <div>username: {{ userInfoService.username }}</div>\r\n    <button (click)=\"logout()\">\r\n      logout\r\n    </button>\r\n  </div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {ImageCroppedEvent} from 'ngx-image-cropper';\n\nimport {ErrorMessageService} from '../../../services/error-message.service';\nimport {SpinnerService} from '../../../services/spinner.service';\n\n@Component({\n  selector: 'app-image-cropper',\n  templateUrl: './image-cropper.component.html',\n  styleUrls: ['./image-cropper.component.scss']\n})\nexport class ImageCropperComponent {\n  public constructor(public spinnerService: SpinnerService, private errorService: ErrorMessageService) {}\n  @Input() public form: FormGroup;\n  public imageChangedEvent: Event;\n  public croppedImage: string;\n\n  fileChangeEvent(event: Event): void {\n    this.imageChangedEvent = event;\n    this.spinnerService.isLoading = true;\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n  }\n  imageLoaded() {}\n  cropperReady() {\n    this.spinnerService.stopLoading();\n  }\n  loadImageFailed() {\n    this.errorService.setError('Cannot load the image');\n  }\n\n  public closeModal() {\n    this.imageChangedEvent = undefined;\n    this.form.patchValue({image: this.croppedImage});\n    this.errorService.clearError();\n    this.spinnerService.stopLoading();\n  }\n}\n","<input type=\"file\" *ngIf=\"form.enabled\" (change)=\"fileChangeEvent($event)\" />\n<div class=\"container\" *ngIf=\"imageChangedEvent\">\n  <div class=\"content\">\n    <div>\n      Original image\n      <app-spinner *ngIf=\"spinnerService.isLoading\"></app-spinner>\n      <image-cropper\n        [imageChangedEvent]=\"imageChangedEvent\"\n        [maintainAspectRatio]=\"true\"\n        [onlyScaleDown]=\"true\"\n        [aspectRatio]=\"10 / 3\"\n        [resizeToWidth]=\"300\"\n        [alignImage]=\"'center'\"\n        format=\"png\"\n        outputType=\"base64\"\n        (imageCropped)=\"imageCropped($event)\"\n        (imageLoaded)=\"imageLoaded()\"\n        (cropperReady)=\"cropperReady()\"\n        (loadImageFailed)=\"loadImageFailed()\"\n      ></image-cropper>\n    </div>\n\n    <div>\n      Result\n      <img *ngIf=\"croppedImage\" [src]=\"croppedImage\" />\n    </div>\n    <button (click)=\"closeModal()\">Close</button>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"lds-ripple\">\r\n  <div></div>\r\n</div>\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {ImageCropperModule} from 'ngx-image-cropper';\r\n\r\nimport {HeaderComponent} from './components/header/header.component';\r\nimport {ImageCropperComponent} from './components/image-cropper/image-cropper.component';\r\nimport {SpinnerComponent} from './components/spinner/spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [HeaderComponent, ImageCropperComponent, SpinnerComponent],\r\n  imports: [ImageCropperModule, CommonModule, ReactiveFormsModule],\r\n  exports: [HeaderComponent, ImageCropperComponent, SpinnerComponent, CommonModule, ReactiveFormsModule]\r\n})\r\nexport class SharedModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  nestJSServerUrl: 'http://localhost:3000/api/v1'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}